const fs = require('fs');
const path = require('path');

/**
 * Converts a TLE epoch string (e.g., "24196.53559491") into a JavaScript Date object.
 * This function is self-contained and used only by this script.
 */
function tleEpochToDate(tleEpoch) {
    const yearStr = tleEpoch.substring(0, 2);
    const dayOfYear = parseFloat(tleEpoch.substring(2));

    // Determine the full year (handles the Y2K problem for TLEs)
    const year = parseInt(yearStr) < 57 ? 2000 + parseInt(yearStr) : 1900 + parseInt(yearStr);

    // Create a date object for the beginning of the year and add the days
    const date = new Date(Date.UTC(year, 0, 1)); // Start at Jan 1st
    date.setUTCDate(date.getUTCDate() + dayOfYear - 1);

    return date;
}

/**
 * Reads a TLE file and prints the UTC date of each entry.
 * @param {string} filePath - The path to the TLE file.
 */
function listAllTleDates(filePath) {
    if (!fs.existsSync(filePath)) {
        console.error(`Error: File not found at ${filePath}`);
        return;
    }

    console.log(`--- Reading TLE Dates from: ${path.basename(filePath)} ---`);

    const fileContent = fs.readFileSync(filePath, 'utf-8');
    const lines = fileContent.split(/\r?\n/).filter(line => line.trim() !== '');

    let tleCount = 0;
    for (let i = 0; i < lines.length - 1; i += 2) {
        const line1 = lines[i];

        // Basic validation for a TLE line 1
        if (line1.startsWith('1 ')) {
            const tleEpochStr = line1.substring(18, 32).trim();
            const tleDate = tleEpochToDate(tleEpochStr);
            console.log(tleDate.toUTCString());
            tleCount++;
        }
    }

    console.log(`\n--- Finished. Found ${tleCount} total TLE entries. ---`);
}

// --- Main Execution ---
const tleFilePath = path.join(__dirname, 'iss_tle.txt');
listAllTleDates(tleFilePath);